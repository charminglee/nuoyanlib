# -*- coding: utf-8 -*-
"""
| ==============================================
|
|   Copyright (c) 2025 Nuoyan
|
|   Author: Nuoyan
|   Email : 1279735247@qq.com
|   Gitee : https://gitee.com/charming-lee
|   Date  : 2025-09-01
|
| ==============================================
"""


from typing import Sequence, Any, List, Callable, Tuple, Optional


def notify_error(player_id: Optional[str] = None) -> None: ...
def call_interval(interval: float) -> Callable: ...
def add_condition_to_func(cond: Callable[[], bool], func: Callable[[bool], Any], freq: int = 1) -> int: ...
def rm_condition_to_func(cond_id: int) -> bool: ...
def all_indexes(seq: Sequence, *elements: Any) -> List[int]: ...
def check_string(string: str, *check: str) -> bool: ...
def check_string2(string: str, *check: str) -> bool: ...
def turn_dict_value_to_tuple(orig_dict: dict) -> None: ...
def turn_list_to_tuple(lst: list) -> tuple: ...
def is_method_overridden(subclass: Any, father: Any, method: str) -> bool: ...
def translate_time(
    sec: int,
    separator: str = "",
    unit: Optional[Tuple[str, str, str]] = ("h", "m", "s"),
    zfill: bool = False,
) -> str: ...
